plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.palantir.docker' version '0.36.0'
}

group = "ms2709.pay-service.banking"
version = "0.0.1"

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java:8.0.33'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    testRuntimeOnly 'com.h2database:h2'
    implementation(project(":global"))
}

tasks.named('test') {
    useJUnitPlatform()
}

//
//
//docker{
//    println(tasks.bootJar.get().outputs.files)
////    이미지 이름
//    name=rootProject.name+"."+project.name + ":" + version
////  도커파일 경로
//    setDockerfile(file("../Dockerfile"))
////  어떤 파일들을 Dockerfile로 복사할지 결정
//    this.files(tasks.bootJar.get().outputs.files)
////   빌드할 때 사용할 인자를 설정
//    buildArgs(mapOf("JAR_FILE" to tasks.bootJar.get().outputs.files.singleFile.name))
//}

tasks.register("prepareKotlinBuildScriptModel"){}
