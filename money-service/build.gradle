plugins {
    id 'java'
    id 'com.palantir.docker' version '0.36.0'
}

group = 'ms2709.pay-service.money'
version = '0.0.2'


java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.kafka:spring-kafka"
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java:8.0.33'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    testRuntimeOnly 'com.h2database:h2'
    implementation(project(":global"))
}

tasks.named('test') {
    useJUnitPlatform()
}

//
//
docker{
    println(tasks.bootJar.outputs.files)
//    이미지 이름
    name rootProject.name+"."+project.name + ":" + version
//  도커파일 경로
    dockerfile file("../Dockerfile")
//  어떤 파일들을 Dockerfile로 복사할지 결정
    files tasks.bootJar.outputs.files
//   빌드할 때 사용할 인자를 설정
    buildArgs([
            JAR_FILE: tasks.bootJar.outputs.files.singleFile.name
    ])
}

//tasks.register("prepareKotlinBuildScriptModel"){}
